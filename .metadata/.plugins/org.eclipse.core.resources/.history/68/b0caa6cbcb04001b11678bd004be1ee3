/*
 * user_app.c
 *
 *  Created on: Oct 2, 2020
 *      Author: chris
 */

#include "user_app.h"
#include "main.h"
#include "dma.h"
#include "i2c.h"
#include "usart.h"
#include "gpio.h"

#include <stdio.h>
#include <ssd1306.h>
#include <ssd1306_tests.h>

char msg_out_buf[15] = "";


SM_DeviceFoundTypedef I2C_DeviceScan() {

	SM_DeviceFoundTypedef smbus_status = SMBUS_DEVICE_MISSING;

    HAL_StatusTypeDef res;
    for(uint16_t i = 0; i < 128; i++)
    {
        res = HAL_I2C_IsDeviceReady(&hi2c1, i << 1, 1, 10);
        if(res == HAL_OK)
        {
           	smbus_status = SMBUS_DEVICE_FOUND;
        }
    }

    return smbus_status;
}

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
	// blink led on rx
	HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
	snprintf(msg_out_buf, sizeof(msg_out_buf), "%s%s", msg_out_buf, uart_data_in);

}

void test_i2c_device()
{
	  if(I2C_DeviceScan())
	  {
		  // start test blink
		  for(int t=0; t<4; t++)
		  {
			  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
			  HAL_Delay(100);
		  }
		  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);

		  ssd1306_TestAll();

		  // end test blink
		  for(int t=0; t<4; t++)
		  {
			  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
			  HAL_Delay(100);
		  }
		  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
	  }
}

void i2c_display_loop()
{
	  ssd1306_Fill(Black);
	  ssd1306_SetCursor(2, 20);


	  ssd1306_WriteString(msg_out_buf, Font_11x18, White);
	  ssd1306_UpdateScreen();
}
